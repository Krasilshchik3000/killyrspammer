"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö (SQLite –∏–ª–∏ PostgreSQL)
"""
import sqlite3
import os
from datetime import datetime
from config import DATABASE_URL, DATABASE_PATH
import logging

logger = logging.getLogger(__name__)

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    if DATABASE_URL:
        # PostgreSQL –¥–ª—è Railway
        try:
            import psycopg2
            conn = psycopg2.connect(DATABASE_URL)
            logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            return conn
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
            raise
    else:
        # SQLite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        conn = sqlite3.connect(DATABASE_PATH)
        logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return conn

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    logger.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î - —É–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–º–ø—Ç–æ–≤")
    
    if DATABASE_URL:
        # PostgreSQL
        conn = get_db_connection()
        cursor = conn.cursor()
        
        # –£–î–ê–õ–Ø–ï–ú —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–º–ø—Ç–æ–≤ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        try:
            cursor.execute("DROP TABLE IF EXISTS prompts")
            logger.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ prompts")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É: {e}")
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS messages (
                id BIGSERIAL PRIMARY KEY,
                message_id BIGINT,
                chat_id BIGINT,
                user_id BIGINT,
                username TEXT,
                text TEXT,
                created_at TIMESTAMP,
                llm_result TEXT,
                admin_decision TEXT,
                admin_decided_at TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –æ–±—É—á–∞—é—â–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS training_examples (
                id SERIAL PRIMARY KEY,
                text TEXT,
                is_spam BOOLEAN,
                source TEXT,
                created_at TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–º–ø—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π)
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS current_prompt (
                id SERIAL PRIMARY KEY,
                prompt_text TEXT,
                updated_at TIMESTAMP,
                improvement_reason TEXT
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS bot_state (
                id SERIAL PRIMARY KEY,
                admin_id BIGINT,
                awaiting_prompt_edit BOOLEAN DEFAULT FALSE,
                pending_prompt TEXT,
                updated_at TIMESTAMP
            )
        ''')
        
        # –í–†–ï–ú–ï–ù–ù–û: –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        cursor.execute("SELECT COUNT(*) FROM current_prompt")
        if cursor.fetchone()[0] == 0:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–í–û–ô –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∫–∞–∫ –±–∞–∑–æ–≤—ã–π
            working_prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–≥—Ä—É–ø–ø—ã –∏ –æ—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –æ–¥–Ω–∏–º –∏–∑ —Ç—Ä—ë—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
–°–ü–ê–ú
–ù–ï_–°–ü–ê–ú  
–í–û–ó–ú–û–ñ–ù–û_–°–ü–ê–ú

–°—á–∏—Ç–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–∞–º–æ–º, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π:

1. –ë–µ–∑–∞–¥—Ä–µ—Å–Ω—ã–µ (–Ω–µ –æ–±—Ä–∞—â–µ–Ω–Ω—ã–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –≤ —á–∞—Ç–µ) –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ–≤–µ—Ä—à–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: –∫—Ä–∏–ø—Ç–∞, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, –æ–±–º–µ–Ω. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ, –∫–æ–≥–¥–∞ —É–∫–∞–∑–∞–Ω—ã —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö.
2. –°–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —ç–º–æ–¥–∑–∏ üíò/üíù/üëÑ –∏ –ø–æ–¥–æ–±–Ω—ã–µ –∏–º.
3. –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ –¥–ª—è —ç–º–æ—Ü–∏–π, –∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —ç—Ç–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —Å–ø–∞–º, –Ω–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –¥—É–º–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —Å–ø–∞–º ‚Äî –≤—ã–±–∏—Ä–∞–π –í–û–ó–ú–û–ñ–ù–û_–°–ü–ê–ú.

–ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è:

- –ù–µ —Å—á–∏—Ç–∞–π —Å–ø–∞–º–æ–º –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä—Ç–∏–π, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É, –Ω–æ –æ–Ω–∞ –≤–µ–¥–µ—Ç –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Å–∞–π—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã), —Å—á–∏—Ç–∞–π –µ–≥–æ –ù–ï_–°–ü–ê–ú.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —è–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–ø–∞–º–∞, —Å—á–∏—Ç–∞–π –µ–≥–æ –ù–ï_–°–ü–ê–ú, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞–ª–æ.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏ —ç—Ç–æ –∏—Å—Ö–æ–¥–∏—Ç –∏–∑ –µ–≥–æ —Å–º—ã—Å–ª–∞) —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ, —ç—Ç–æ –ù–ï_–°–ü–ê–ú.

–°–æ–æ–±—â–µ–Ω–∏–µ: ¬´{message_text}¬ª

–û—Ç–≤–µ—Ç:"""
            cursor.execute('''
                INSERT INTO current_prompt (prompt_text, updated_at, improvement_reason)
                VALUES (%s, %s, '–¢–í–û–ô –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç')
            ''', (working_prompt, datetime.now()))
        
    else:
        # SQLite (—Å—Ç–∞—Ä—ã–π –∫–æ–¥)
        conn = sqlite3.connect(DATABASE_PATH)
        cursor = conn.cursor()
        
        # –£–î–ê–õ–Ø–ï–ú —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–º–ø—Ç–æ–≤ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        try:
            cursor.execute("DROP TABLE IF EXISTS prompts")
            logger.info("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ prompts –∏–∑ SQLite")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏–∑ SQLite: {e}")
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS messages (
                id INTEGER PRIMARY KEY,
                message_id INTEGER,
                chat_id INTEGER,
                user_id INTEGER,
                username TEXT,
                text TEXT,
                created_at TIMESTAMP,
                llm_result TEXT,
                admin_decision TEXT,
                admin_decided_at TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –æ–±—É—á–∞—é—â–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS training_examples (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                text TEXT,
                is_spam BOOLEAN,
                source TEXT,
                created_at TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–º–ø—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π)
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS current_prompt (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                prompt_text TEXT,
                updated_at TIMESTAMP,
                improvement_reason TEXT
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS bot_state (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                admin_id INTEGER,
                awaiting_prompt_edit BOOLEAN DEFAULT FALSE,
                pending_prompt TEXT,
                updated_at TIMESTAMP
            )
        ''')
        
        # –í–†–ï–ú–ï–ù–ù–û: –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        cursor.execute("SELECT COUNT(*) FROM current_prompt")
        if cursor.fetchone()[0] == 0:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–í–û–ô –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∫–∞–∫ –±–∞–∑–æ–≤—ã–π
            working_prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–≥—Ä—É–ø–ø—ã –∏ –æ—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –æ–¥–Ω–∏–º –∏–∑ —Ç—Ä—ë—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
–°–ü–ê–ú
–ù–ï_–°–ü–ê–ú  
–í–û–ó–ú–û–ñ–ù–û_–°–ü–ê–ú

–°—á–∏—Ç–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø–∞–º–æ–º, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π:

1. –ë–µ–∑–∞–¥—Ä–µ—Å–Ω—ã–µ (–Ω–µ –æ–±—Ä–∞—â–µ–Ω–Ω—ã–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –≤ —á–∞—Ç–µ) –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ–≤–µ—Ä—à–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: –∫—Ä–∏–ø—Ç–∞, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, –æ–±–º–µ–Ω. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ, –∫–æ–≥–¥–∞ —É–∫–∞–∑–∞–Ω—ã —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö.
2. –°–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —ç–º–æ–¥–∑–∏ üíò/üíù/üëÑ –∏ –ø–æ–¥–æ–±–Ω—ã–µ –∏–º.
3. –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–µ –¥–ª—è —ç–º–æ—Ü–∏–π, –∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —ç—Ç–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —Å–ø–∞–º, –Ω–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –¥—É–º–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —Å–ø–∞–º ‚Äî –≤—ã–±–∏—Ä–∞–π –í–û–ó–ú–û–ñ–ù–û_–°–ü–ê–ú.

–ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è:

- –ù–µ —Å—á–∏—Ç–∞–π —Å–ø–∞–º–æ–º –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä—Ç–∏–π, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É, –Ω–æ –æ–Ω–∞ –≤–µ–¥–µ—Ç –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Å–∞–π—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã), —Å—á–∏—Ç–∞–π –µ–≥–æ –ù–ï_–°–ü–ê–ú.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —è–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–ø–∞–º–∞, —Å—á–∏—Ç–∞–π –µ–≥–æ –ù–ï_–°–ü–ê–ú, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–∞–ª–æ.
- –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏ —ç—Ç–æ –∏—Å—Ö–æ–¥–∏—Ç –∏–∑ –µ–≥–æ —Å–º—ã—Å–ª–∞) —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ, —ç—Ç–æ –ù–ï_–°–ü–ê–ú.

–°–æ–æ–±—â–µ–Ω–∏–µ: ¬´{message_text}¬ª

–û—Ç–≤–µ—Ç:"""
            cursor.execute('''
                INSERT INTO current_prompt (prompt_text, updated_at, improvement_reason)
                VALUES (?, ?, '–¢–í–û–ô –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç')
            ''', (working_prompt, datetime.now()))
    
    conn.commit()
    conn.close()
    logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

def execute_query(query, params=None, fetch=False):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞"""
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        
        if DATABASE_URL:
            # PostgreSQL - –∑–∞–º–µ–Ω—è–µ–º ? –Ω–∞ %s
            query = query.replace('?', '%s')
        
        if params:
            cursor.execute(query, params)
        else:
            cursor.execute(query)
        
        result = None
        if fetch == 'one':
            result = cursor.fetchone()
        elif fetch == 'all':
            result = cursor.fetchall()
        
        conn.commit()
        conn.close()
        
        return result
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {e}")
        logger.error(f"üìù –ó–∞–ø—Ä–æ—Å: {query}")
        logger.error(f"üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        raise

def set_bot_state(admin_id, awaiting_prompt_edit=False, pending_prompt=None):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞"""
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ –∞–¥–º–∏–Ω–∞
        execute_query("DELETE FROM bot_state WHERE admin_id = ?", (admin_id,))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        execute_query('''
            INSERT INTO bot_state (admin_id, awaiting_prompt_edit, pending_prompt, updated_at)
            VALUES (?, ?, ?, ?)
        ''', (admin_id, awaiting_prompt_edit, pending_prompt, datetime.now()))
        
        logger.info(f"üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: awaiting_prompt_edit={awaiting_prompt_edit}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")

def get_bot_state(admin_id):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞"""
    try:
        result = execute_query(
            "SELECT awaiting_prompt_edit, pending_prompt FROM bot_state WHERE admin_id = ? ORDER BY updated_at DESC LIMIT 1",
            (admin_id,), fetch='one'
        )
        if result:
            awaiting_edit, pending = result
            logger.info(f"üìñ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: awaiting_prompt_edit={awaiting_edit}")
            return awaiting_edit, pending
        return False, None
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
        return False, None
