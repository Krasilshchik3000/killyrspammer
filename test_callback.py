#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫
"""
import asyncio
import sys
sys.path.insert(0, '.')

from unittest.mock import MagicMock, AsyncMock
from main import handle_admin_feedback, ADMIN_ID
from database import init_database, execute_query

async def test_callback():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_database()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ë–î
    test_message_id = 12345
    test_text = "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    test_llm_result = "–í–û–ó–ú–û–ñ–ù–û_–°–ü–ê–ú"
    
    try:
        execute_query('''
            INSERT INTO messages (message_id, chat_id, user_id, username, text, created_at, llm_result)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (test_message_id, -123, 456, "test", test_text, "2024-01-01", test_llm_result))
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ë–î")
    except:
        print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –µ—Å—Ç—å –≤ –ë–î")
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ callback
    callback = MagicMock()
    callback.from_user.id = ADMIN_ID
    callback.data = f"not_spam_{test_message_id}"
    callback.answer = AsyncMock()
    callback.message.edit_text = AsyncMock()
    callback.message.text = "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞"
    
    print(f"üîò –¢–µ—Å—Ç–∏—Ä—É—é callback: {callback.data}")
    print(f"üë§ –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {callback.from_user.id}")
    
    try:
        # –ú–æ–∫–∏—Ä—É–µ–º –±–æ—Ç–∞
        import main
        main.bot = MagicMock()
        main.bot.send_message = AsyncMock()
        
        # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        await handle_admin_feedback(callback)
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ callback.answer –±—ã–ª –≤—ã–∑–≤–∞–Ω
        if callback.answer.called:
            print("‚úÖ callback.answer –±—ã–ª –≤—ã–∑–≤–∞–Ω")
        else:
            print("‚ùå callback.answer –ù–ï –±—ã–ª –≤—ã–∑–≤–∞–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–∫–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_callback())
