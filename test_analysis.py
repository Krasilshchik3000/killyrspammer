#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
"""
import asyncio
import sys
sys.path.insert(0, '.')

from main import analyze_bot_error, get_current_prompt
from config import OPENAI_API_KEY
from openai import AsyncOpenAI

async def test_analysis():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI
    import main
    main.openai_client = AsyncOpenAI(api_key=OPENAI_API_KEY)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π —Å–ø–∞–º
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–ø–∞–º–∞...")
    message_text = "–ù—É–∂–Ω—ã –≥—Ä—É–∑—á–∏–∫–∏. –ü–∏—à–∏—Ç–µ –≤ –ª—Å"
    
    analysis, improved_prompt = await analyze_bot_error(message_text, "missed_spam")
    
    if analysis:
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω: {analysis[:100]}...")
        if improved_prompt:
            print(f"‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—É—á–µ–Ω: {improved_prompt[:100]}...")
        else:
            print("‚ùå –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ù–ï –∏–∑–≤–ª–µ—á–µ–Ω")
    else:
        print("‚ùå –ê–Ω–∞–ª–∏–∑ –ù–ï –ø–æ–ª—É—á–µ–Ω")
    
    # –¢–µ—Å—Ç 2: –õ–æ–∂–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –∞–Ω–∞–ª–∏–∑ –ª–æ–∂–Ω–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è...")
    message_text = "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –ö–∞–∫ –¥–µ–ª–∞?"
    
    analysis, improved_prompt = await analyze_bot_error(message_text, "false_positive")
    
    if analysis:
        print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω: {analysis[:100]}...")
        if improved_prompt:
            print(f"‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—É—á–µ–Ω: {improved_prompt[:100]}...")
        else:
            print("‚ùå –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ù–ï –∏–∑–≤–ª–µ—á–µ–Ω")
    else:
        print("‚ùå –ê–Ω–∞–ª–∏–∑ –ù–ï –ø–æ–ª—É—á–µ–Ω")

if __name__ == "__main__":
    asyncio.run(test_analysis())
